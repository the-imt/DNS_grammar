#!/usr/bin/raku

=begin pod

=head1 NAME

10-dns_grammar

=head1 SYNOPSIS


tests for dns_grammar


=head1 DESCRIPTION

tests an application that reads in a configuration file, as provided.  It then does a bunch of
different things.  I'll probably add more here eventually


=head1 GENERATED BY

Some guy with a keyboard

=head1 AUTHOR

Colin

=head1 LICENSE


Copyright (c) 2020 - 2022, Colin, The IMT
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or
promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

=head1 THOUGHTS

So, I think it better to test results rather than methods.  Therefore, I really don't care how the grammar gives me 
the correct result, only that it does.  In other words, the tests are written as though against an API.

=end pod



use lib '../lib';
use dns_grammar_AD;
use Test;

use-ok('dns_grammar_AD', 'Can load "DNS Grammar AD" ok');

my $TestGrammar;

#we're testing a grammar here, so this should all be simple inject strings confirm output.
#Note I expect some of these strings to eventually get straight up mean.

# Confirm Grammars work as expected:

$TestGrammar = DNS_grammar_AD.parse(qw/autodiscover		CNAME		autodiscover.outlook.com./, actions => DNS_captures_AD);
is $TestGrammar.made<line><type>, "CNAME", "2: Checking I can spot the CNAME";
is $TestGrammar.made<line><value>, "autodiscover", "3: Checking I parse it correctly";
is $TestGrammar.made<line><additional>, "autodiscover.outlook.com.", "4: Checking the CNAME actually points at something";

$TestGrammar = DNS_grammar_AD.parse(qw/labvpn		A		10.10.10.100/, actions => DNS_captures_AD);
is $TestGrammar.made<line><type>, "A", "5: Checking I can spot an A record";
is $TestGrammar.made<line><value>, "labvpn", "6: Confirming I get a hostname";
is $TestGrammar.made<line><additional>, "10.10.10.100", "7: Confirming I get the address";

# See note in parser in v6addr token, this is a pretty easy example, should probably be more pathological

$TestGrammar = DNS_grammar_AD.parse(qw/netlab2			AAAA		2001:470:1D:95D::254/, actions => DNS_captures_AD);
is $TestGrammar.made<line><type>, "AAAA", "8: Checking I can spot an AAAA record";
is $TestGrammar.made<line><value>, "netlab2", "9: Confirming I get a hostname";
is $TestGrammar.made<line><additional>, "2001:470:1D:95D::254", "10: Confirming I get the address";

$TestGrammar = DNS_grammar_AD.parse(qw/bigserver-2			A		10.254.10.10/, actions => DNS_captures_AD);
is $TestGrammar.made<line><type>, "A", "11: Checking I can spot a different A record";
is $TestGrammar.made<line><value>, "bigserver-2", "12: Confirming I get a different hostname - update to value token";
is $TestGrammar.made<line><additional>, "10.254.10.10", "13: Confirming I get the address";

$TestGrammar = DNS_grammar_AD.parse(qw/bigserver-3                  691200	A	10.254.10.20/, actions => DNS_captures_AD);
is $TestGrammar.made<line><type>, "A", "14: Checking I can spot a different A record";
is $TestGrammar.made<line><value>, "bigserver-3", "15: Confirming I get a different hostname - number in front";
is $TestGrammar.made<line><additional>, "10.254.10.20", "16: Confirming I get the address";

$TestGrammar = DNS_grammar_AD.parse(qw/discover				90125	CNAME		discover.outlook.com./, actions => DNS_captures_AD);
is $TestGrammar.made<line><type>, "CNAME", "17: Checking I can spot the CNAME with number";
is $TestGrammar.made<line><value>, "discover", "3: Checking I parse it correctly";
is $TestGrammar.made<line><additional>, "discover.outlook.com.", "4: Checking the CNAME actually points at something";

done-testing; 
